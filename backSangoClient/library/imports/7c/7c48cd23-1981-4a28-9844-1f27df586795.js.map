{"version":3,"sources":["../../../../../assets/Script/gameScene/assets/Script/gameScene/gameScene.js"],"names":["cc","Class","extends","Component","properties","bg","default","type","Node","headNode","Sprite","myAtlas","SpriteAtlas","panelLayer","onLoad","spriteFrame","getSpriteFrame","on","EventType","TOUCH_MOVE","event","delta","touch","getDelta","new_x","position","x","width","director","getVisibleSize","new_y","y","height","p","start","update","dt"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,YAAI;AACAC,qBAAS,IADT;AAEAC,kBAAMP,GAAGQ;AAFT,SADI;AAKRC,kBAAU;AACNH,qBAAS,IADH;AAENC,kBAAMP,GAAGU;AAFH,SALF;AASRC,iBAAS;AACLL,qBAAS,IADJ;AAELC,kBAAMP,GAAGY;AAFJ,SATD;AAaRC,oBAAY;AACRP,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD;;AAbJ,KAHP;;AAuBLM,UAvBK,oBAuBK;AAAA;;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKL,QAAL,CAAcM,WAAd,GAA4B,KAAKJ,OAAL,CAAaK,cAAb,CAA4B,SAA5B,CAA5B;;AAEA,aAAKX,EAAL,CAAQY,EAAR,CAAWjB,GAAGQ,IAAH,CAAQU,SAAR,CAAkBC,UAA7B,EAAyC,UAACC,KAAD,EAAU;AAC/C,gBAAIC,QAAQD,MAAME,KAAN,CAAYC,QAAZ,EAAZ;AACA,gBAAIC,QAAQ,MAAKnB,EAAL,CAAQoB,QAAR,CAAiBC,CAAjB,GAAqBL,MAAMK,CAAvC;AACA,gBAAGF,QAAQ,MAAKnB,EAAL,CAAQsB,KAAR,GAAgB,CAAhB,GAAoB3B,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BF,KAA7B,GAAqC,CAApE,EAAsE;AAClEH,wBAAQ,MAAKnB,EAAL,CAAQsB,KAAR,GAAgB,CAAhB,GAAoB3B,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BF,KAA7B,GAAqC,CAAjE;AACH;AACD,gBAAGH,QAAQxB,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BF,KAA7B,GAAqC,CAArC,GAAyC,MAAKtB,EAAL,CAAQsB,KAAR,GAAgB,CAApE,EAAsE;AAClEH,wBAAQxB,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BF,KAA7B,GAAqC,CAArC,GAAyC,MAAKtB,EAAL,CAAQsB,KAAR,GAAgB,CAAjE;AACH;AACD,gBAAIG,QAAQ,MAAKzB,EAAL,CAAQoB,QAAR,CAAiBM,CAAjB,GAAqBV,MAAMU,CAAvC;AACA,gBAAGD,QAAQ,MAAKzB,EAAL,CAAQ2B,MAAR,GAAiB,CAAjB,GAAqBhC,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BG,MAA7B,GAAsC,CAAtE,EAAwE;AACpEF,wBAAQ,MAAKzB,EAAL,CAAQ2B,MAAR,GAAiB,CAAjB,GAAqBhC,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BG,MAA7B,GAAsC,CAAnE;AACH;AACD,gBAAGF,QAAQ9B,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BG,MAA7B,GAAsC,CAAtC,GAA0C,MAAK3B,EAAL,CAAQ2B,MAAR,GAAiB,CAAtE,EAAwE;AACpEF,wBAAQ9B,GAAG4B,QAAH,CAAYC,cAAZ,GAA6BG,MAA7B,GAAsC,CAAtC,GAA0C,MAAK3B,EAAL,CAAQ2B,MAAR,GAAiB,CAAnE;AACH;AACD,kBAAK3B,EAAL,CAAQoB,QAAR,GAAmBzB,GAAGiC,CAAH,CAAKT,KAAL,EAAYM,KAAZ,CAAnB;AACH,SAjBD,EAiBG,KAAKzB,EAjBR;AAkBH,KAnDI;AAqDL6B,SArDK,mBAqDI,CAER,CAvDI;AAyDLC,UAzDK,kBAyDGC,EAzDH,EAyDO,CAEX;AA3DI,CAAT","file":"gameScene.js","sourceRoot":"../../../../../assets/Script/gameScene","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bg: {\n            default: null,\n            type: cc.Node\n        },\n        headNode: {\n            default: null,\n            type: cc.Sprite\n        },\n        myAtlas: {\n            default: null,\n            type: cc.SpriteAtlas\n        },\n        panelLayer: {\n            default: null,\n            type: cc.Node\n        },\n\n    },\n\n    onLoad () {\n        // cc.loader.loadRes('ui/icon/btn_back_1', (err, tex)=> {\n        //     if(err){\n        //         console.log(' loadRes err = ' + err);\n        //     }\n        //     console.log('Should load a texture from external url: ' + (tex instanceof cc.Texture2D));\n        //     this.headNode.spriteFrame = new cc.SpriteFrame(tex);\n        // });\n        this.headNode.spriteFrame = this.myAtlas.getSpriteFrame('gaoding');\n\n        this.bg.on(cc.Node.EventType.TOUCH_MOVE, (event)=> {\n            var delta = event.touch.getDelta();\n            let new_x = this.bg.position.x + delta.x;\n            if(new_x > this.bg.width / 2 - cc.director.getVisibleSize().width / 2){\n                new_x = this.bg.width / 2 - cc.director.getVisibleSize().width / 2;\n            }\n            if(new_x < cc.director.getVisibleSize().width / 2 - this.bg.width / 2){\n                new_x = cc.director.getVisibleSize().width / 2 - this.bg.width / 2;\n            }\n            let new_y = this.bg.position.y + delta.y;\n            if(new_y > this.bg.height / 2 - cc.director.getVisibleSize().height / 2){\n                new_y = this.bg.height / 2 - cc.director.getVisibleSize().height / 2;\n            }\n            if(new_y < cc.director.getVisibleSize().height / 2 - this.bg.height / 2){\n                new_y = cc.director.getVisibleSize().height / 2 - this.bg.height / 2;\n            }\n            this.bg.position = cc.p(new_x, new_y);\n        }, this.bg);\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n\n    },\n});\n"]}