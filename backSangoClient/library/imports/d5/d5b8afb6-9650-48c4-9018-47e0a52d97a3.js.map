{"version":3,"sources":["../../../../../assets/Script/util/assets/Script/util/eventListener.js"],"names":["EventListener","obj","Register","on","type","method","hasOwnProperty","handerList","i","length","hander","console","log","push","fire","args","j","arguments","apply","off","handlerList","splice","destroy"],"mappings":";;;;;;;;;AAAA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AACjC,QAAIC,WAAW,EAAf;AACAD,QAAIE,EAAJ,GAAS,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC7B,YAAG,CAACH,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAC9BF,qBAASE,IAAT,IAAiB,EAAjB;AACH;AACD;AACA,YAAIG,aAAaL,SAASE,IAAT,CAAjB;AACA,aAAI,IAAII,IAAI,CAAZ,EAAeA,IAAID,WAAWE,MAA9B,EAAsCD,GAAtC,EAA0C;AACtC,gBAAIE,SAASH,WAAWC,CAAX,CAAb;AACA,gBAAGE,UAAUL,MAAb,EAAoB;AAChBM,wBAAQC,GAAR,CAAY,iDAAZ;AACA;AACH;AACJ;AACDV,iBAASE,IAAT,EAAeS,IAAf,CAAoBR,MAApB;AACAM,gBAAQC,GAAR,CAAY,qCAAqCR,IAAjD;AACH,KAfD;AAgBAH,QAAIa,IAAJ,GAAW,UAAUV,IAAV,EAAgB;AACvB,YAAGF,SAASI,cAAT,CAAwBF,IAAxB,CAAH,EAAiC;AAC7B,gBAAIG,aAAaL,SAASE,IAAT,CAAjB;AACA,gBAAIW,OAAO,EAAX;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIC,UAAUR,MAA7B,EAAqCO,GAArC,EAAyC;AACrCD,qBAAKF,IAAL,CAAUI,UAAUD,CAAV,CAAV;AACH;AACDL,oBAAQC,GAAR,CAAY,yBAAyBL,WAAWE,MAAhD;AACA,iBAAI,IAAID,IAAI,CAAZ,EAAeA,IAAID,WAAWE,MAA9B,EAAsCD,GAAtC,EAA0C;AACtC,oBAAIE,SAASH,WAAWC,CAAX,CAAb;AACAE,uBAAOQ,KAAP,CAAa,IAAb,EAAmBH,IAAnB;AACH;AACJ;AACJ,KAbD;AAcAd,QAAIkB,GAAJ,GAAU,UAAUf,IAAV,EAAgBC,MAAhB,EAAwB;AAC9B,YAAIH,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAC9B,gBAAIgB,cAAclB,SAASE,IAAT,CAAlB;AACA,iBAAK,IAAII,IAAI,CAAb,EAAiBA,IAAIY,YAAYX,MAAjC,EAA0CD,GAA1C,EAA+C;AAC3C,oBAAIY,YAAYZ,CAAZ,MAAmBH,MAAvB,EAA8B;AAC1Be,gCAAYC,MAAZ,CAAmBb,CAAnB,EAAuB,CAAvB;AACAG,4BAAQC,GAAR,CAAY,wBAAwBR,IAApC;AACH;AACJ;AACJ;AACJ,KAVD;AAWAH,QAAIqB,OAAJ,GAAc,YAAY;AACtBpB,mBAAW,EAAX;AACH,KAFD;AAGA,WAAOD,GAAP;AACH,CA/CD;kBAgDeD","file":"eventListener.js","sourceRoot":"../../../../../assets/Script/util","sourcesContent":["const EventListener = function (obj) {\n    let Register = {};\n    obj.on = function (type, method) {\n        if(!Register.hasOwnProperty(type)){\n            Register[type] = [];\n        }\n        // 检测重复\n        let handerList = Register[type];\n        for(let i = 0; i < handerList.length; i++){\n            let hander = handerList[i];\n            if(hander == method){\n                console.log(' EventListener on method error : repeat method ');\n                return;\n            }\n        }\n        Register[type].push(method);\n        console.log(' EventListener on method type = ' + type);\n    };\n    obj.fire = function (type) {\n        if(Register.hasOwnProperty(type)){\n            let handerList = Register[type];\n            let args = [];\n            for(let j = 1; j < arguments.length; j++){\n                args.push(arguments[j]);\n            }\n            console.log('handerList.length = ' + handerList.length);\n            for(let i = 0; i < handerList.length; i++){\n                let hander = handerList[i];\n                hander.apply(this, args);\n            }\n        }\n    };\n    obj.off = function (type, method) {\n        if (Register.hasOwnProperty(type)){\n            var handlerList = Register[type];\n            for (var i = 0 ; i < handlerList.length ; i ++){\n                if (handlerList[i] === method){\n                    handlerList.splice(i , 1);\n                    console.log(\"off handler name = \" + type);\n                }\n            }\n        }\n    };\n    obj.destroy = function () {\n        Register = {};\n    }\n    return obj;\n};\nexport default EventListener;"]}